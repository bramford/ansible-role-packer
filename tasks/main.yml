---
- name: Check for existing packer version installation
  stat:
    path: "{{ packer_install_directory }}/packer_{{ packer_version }}/packer"
  register: check_existing_packer

- name: Install unzip
  package:
    name: unzip

- block:
    - name: Create packer version directory
      file:
        name: "{{ packer_install_directory }}/packer_{{ packer_version }}"
        state: directory

    - name: Download packer archive
      get_url:
        url: "https://releases.hashicorp.com/packer/{{ packer_version }}/packer_{{ packer_version }}_linux_{{ ansible_architecture|regex_replace('x86_64','amd64') }}.zip"
        dest: "{{ packer_install_directory }}/packer_{{ packer_version }}/"

    - name: Unarchive packer
      unarchive:
        src: "{{ packer_install_directory }}/packer_{{ packer_version }}/packer_{{ packer_version }}_linux_{{ ansible_architecture|regex_replace('x86_64','amd64') }}.zip"
        dest: "{{ packer_install_directory }}/packer_{{ packer_version }}/"
        remote_src: yes

    - name: Remove packer archive
      file:
        path: "{{ packer_install_directory }}/packer_{{ packer_version }}/packer_{{ packer_version }}_linux_{{ ansible_architecture|regex_replace('x86_64','amd64') }}.zip"
        state: absent

    - name: Change packer mode to 655
      file:
        path: "{{ packer_install_directory }}"
        mode: 0655
        recurse: yes
  when: check_existing_packer.stat.exists == False

- name: Symlink packer to correct version on RHEL/CentOS
  file:
    path: "{{ packer_install_directory }}/packer.io"
    src: "{{ packer_install_directory }}/packer_{{ packer_version }}/packer"
    state: link
    force: yes
    mode: 0655
  when: ansible_os_family == "RedHat"

- name: Symlink packer to correct version
  file:
    path: "{{ packer_install_directory }}/packer"
    src: "{{ packer_install_directory }}/packer_{{ packer_version }}/packer"
    state: link
    force: yes
    mode: 0645
    owner: root
    group: root
  when: ansible_os_family != "RedHat"